//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherExplosionAnimator;

    public static Entitas.IMatcher<GameEntity> ExplosionAnimator {
        get {
            if (_matcherExplosionAnimator == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ExplosionAnimator);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherExplosionAnimator = matcher;
            }

            return _matcherExplosionAnimator;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Game.Explosions.ExplosionAnimatorComponent explosionAnimator { get { return (Code.Game.Explosions.ExplosionAnimatorComponent)GetComponent(GameComponentsLookup.ExplosionAnimator); } }
    public Code.Game.Explosions.Behaviours.ExplosionAnimator ExplosionAnimator { get { return explosionAnimator.Value; } }
    public bool hasExplosionAnimator { get { return HasComponent(GameComponentsLookup.ExplosionAnimator); } }

    public GameEntity AddExplosionAnimator(Code.Game.Explosions.Behaviours.ExplosionAnimator newValue) {
        var index = GameComponentsLookup.ExplosionAnimator;
        var component = (Code.Game.Explosions.ExplosionAnimatorComponent)CreateComponent(index, typeof(Code.Game.Explosions.ExplosionAnimatorComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceExplosionAnimator(Code.Game.Explosions.Behaviours.ExplosionAnimator newValue) {
        var index = GameComponentsLookup.ExplosionAnimator;
        var component = (Code.Game.Explosions.ExplosionAnimatorComponent)CreateComponent(index, typeof(Code.Game.Explosions.ExplosionAnimatorComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveExplosionAnimator() {
        RemoveComponent(GameComponentsLookup.ExplosionAnimator);
        return this;
    }
}
