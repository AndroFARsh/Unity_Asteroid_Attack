//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherHostileSpawnerWave;

    public static Entitas.IMatcher<GameEntity> HostileSpawnerWave {
        get {
            if (_matcherHostileSpawnerWave == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.HostileSpawnerWave);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherHostileSpawnerWave = matcher;
            }

            return _matcherHostileSpawnerWave;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Game.HostileSpawners.HostileSpawnerWaveComponent hostileSpawnerWave { get { return (Code.Game.HostileSpawners.HostileSpawnerWaveComponent)GetComponent(GameComponentsLookup.HostileSpawnerWave); } }
    public int HostileSpawnerWave { get { return hostileSpawnerWave.Value; } }
    public bool hasHostileSpawnerWave { get { return HasComponent(GameComponentsLookup.HostileSpawnerWave); } }

    public GameEntity AddHostileSpawnerWave(int newValue) {
        var index = GameComponentsLookup.HostileSpawnerWave;
        var component = (Code.Game.HostileSpawners.HostileSpawnerWaveComponent)CreateComponent(index, typeof(Code.Game.HostileSpawners.HostileSpawnerWaveComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceHostileSpawnerWave(int newValue) {
        var index = GameComponentsLookup.HostileSpawnerWave;
        var component = (Code.Game.HostileSpawners.HostileSpawnerWaveComponent)CreateComponent(index, typeof(Code.Game.HostileSpawners.HostileSpawnerWaveComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveHostileSpawnerWave() {
        RemoveComponent(GameComponentsLookup.HostileSpawnerWave);
        return this;
    }
}
