//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRoute;

    public static Entitas.IMatcher<GameEntity> Route {
        get {
            if (_matcherRoute == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Route);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRoute = matcher;
            }

            return _matcherRoute;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Game.Level.RouteComponent route { get { return (Code.Game.Level.RouteComponent)GetComponent(GameComponentsLookup.Route); } }
    public Code.Game.Level.RouteName Route { get { return route.Value; } }
    public bool hasRoute { get { return HasComponent(GameComponentsLookup.Route); } }

    public GameEntity AddRoute(Code.Game.Level.RouteName newValue) {
        var index = GameComponentsLookup.Route;
        var component = (Code.Game.Level.RouteComponent)CreateComponent(index, typeof(Code.Game.Level.RouteComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceRoute(Code.Game.Level.RouteName newValue) {
        var index = GameComponentsLookup.Route;
        var component = (Code.Game.Level.RouteComponent)CreateComponent(index, typeof(Code.Game.Level.RouteComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveRoute() {
        RemoveComponent(GameComponentsLookup.Route);
        return this;
    }
}
